// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: sql.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SQLExec is a structure used to execute a SQL query on a SQL Database.
// This message type should be leveraged for queries that do not return rows.
type SQLExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Query is the SQL Query to be executed. This field should be a byte slice
	// to avoid conflicts with JSON encoding.
	Query []byte `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SQLExec) Reset() {
	*x = SQLExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLExec) ProtoMessage() {}

func (x *SQLExec) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLExec.ProtoReflect.Descriptor instead.
func (*SQLExec) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{0}
}

func (x *SQLExec) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

// SQLExecResponse is a structure supplied as a response message to a SQLExec
// request.
type SQLExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status is the human readable error message or success message for function
	// execution.
	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// LastInsertID is the ID of the last inserted row. This field is only
	// populated if the query was an insert query and the database supports
	// returning the last inserted ID.
	LastInsertId int64 `protobuf:"varint,2,opt,name=last_insert_id,json=lastInsertId,proto3" json:"last_insert_id,omitempty"`
	// RowsAffected is the number of rows affected by the query. This field is
	// only populated if the query was an insert, update, or delete query.
	RowsAffected int64 `protobuf:"varint,3,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
}

func (x *SQLExecResponse) Reset() {
	*x = SQLExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLExecResponse) ProtoMessage() {}

func (x *SQLExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLExecResponse.ProtoReflect.Descriptor instead.
func (*SQLExecResponse) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{1}
}

func (x *SQLExecResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SQLExecResponse) GetLastInsertId() int64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

func (x *SQLExecResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

// SQLQuery is a structure used to create SQL queries to a SQL Database.
type SQLQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Query is the SQL Query to be executed. This field should be a byte slice
	// to avoid conflicts with JSON encoding.
	Query []byte `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SQLQuery) Reset() {
	*x = SQLQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLQuery) ProtoMessage() {}

func (x *SQLQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLQuery.ProtoReflect.Descriptor instead.
func (*SQLQuery) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{2}
}

func (x *SQLQuery) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

// SQLQueryResponse is a structure supplied as a response message to a SQL
// Database Query.
type SQLQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status is the human readable error message or success message for function
	// execution.
	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Columns is a list of column names returned by the query. This field is
	// only populated if the query was a select query.
	Columns []string `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	// Data is a JSON encoded byte slice of the data returned by the query.
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SQLQueryResponse) Reset() {
	*x = SQLQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLQueryResponse) ProtoMessage() {}

func (x *SQLQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLQueryResponse.ProtoReflect.Descriptor instead.
func (*SQLQueryResponse) Descriptor() ([]byte, []int) {
	return file_sql_proto_rawDescGZIP(), []int{3}
}

func (x *SQLQueryResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SQLQueryResponse) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *SQLQueryResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_sql_proto protoreflect.FileDescriptor

var file_sql_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x61, 0x72,
	0x6d, 0x61, 0x63, 0x2e, 0x73, 0x71, 0x6c, 0x1a, 0x0c, 0x74, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x07, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x65, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x53, 0x51, 0x4c, 0x45, 0x78,
	0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x72,
	0x6d, 0x61, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73,
	0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x20, 0x0a,
	0x08, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x68, 0x0a, 0x10, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x2d, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x74, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sql_proto_rawDescOnce sync.Once
	file_sql_proto_rawDescData = file_sql_proto_rawDesc
)

func file_sql_proto_rawDescGZIP() []byte {
	file_sql_proto_rawDescOnce.Do(func() {
		file_sql_proto_rawDescData = protoimpl.X.CompressGZIP(file_sql_proto_rawDescData)
	})
	return file_sql_proto_rawDescData
}

var file_sql_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sql_proto_goTypes = []any{
	(*SQLExec)(nil),          // 0: tarmac.sql.SQLExec
	(*SQLExecResponse)(nil),  // 1: tarmac.sql.SQLExecResponse
	(*SQLQuery)(nil),         // 2: tarmac.sql.SQLQuery
	(*SQLQueryResponse)(nil), // 3: tarmac.sql.SQLQueryResponse
	(*Status)(nil),           // 4: tarmac.Status
}
var file_sql_proto_depIdxs = []int32{
	4, // 0: tarmac.sql.SQLExecResponse.status:type_name -> tarmac.Status
	4, // 1: tarmac.sql.SQLQueryResponse.status:type_name -> tarmac.Status
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sql_proto_init() }
func file_sql_proto_init() {
	if File_sql_proto != nil {
		return
	}
	file_tarmac_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sql_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SQLExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SQLExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SQLQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sql_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SQLQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sql_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sql_proto_goTypes,
		DependencyIndexes: file_sql_proto_depIdxs,
		MessageInfos:      file_sql_proto_msgTypes,
	}.Build()
	File_sql_proto = out.File
	file_sql_proto_rawDesc = nil
	file_sql_proto_goTypes = nil
	file_sql_proto_depIdxs = nil
}
